import base64
from typing import Union
from uuid import UUID
from pydantic import EmailStr
from api.models import ShowUser, EventCreate, ShowEvent, ApplicationCreate, ShowApplication, \
    CommentCreate, ShowComment, NotificationCreate, ShowNotification, ShowArticle, ArticleCreate
from api.models import UserCreate
from db.models import PortalRole, Event, Application, Notifications, Comments, Article
from db.dals import UserDAL
from db.models import User
from hashing import Hasher
from PIL import Image
import io


async def _create_new_user(body: UserCreate, db) -> ShowUser:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            user = await user_dal.create_user(
                name=body.name,
                surname=body.surname,
                email=body.email,
                age=body.age,
                hashed_password=Hasher.get_password_hash(body.password),
                roles=PortalRole.ROLE_PORTAL_USER

            )
            return ShowUser(
                user_id=user.user_id,
                name=user.name,
                surname=user.surname,
                age=user.age,
                email=user.email,
                is_active=user.is_active,
            )


async def _create_new_article(body: ArticleCreate, db) -> ShowArticle:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            article = await user_dal.create_article(
                user_id=body.user_id,
                article_name=body.article_name,
                engl_article_name=body.engl_article_name,
                authors=body.authors,
                engl_authors=body.engl_authors,
                author_city_first=body.author_city_first,
                author_city_second=body.author_city_second,
                engl_author_city_first=body.engl_author_city_first,
                engl_author_city_second=body.engl_author_city_second,
                annotation=body.annotation,
                keywords=body.keywords,
                engl_annotation=body.engl_annotation,
                engl_keywords=body.engl_keywords,
                introduction=body.introduction,
                theory=body.theory,
                results=body.results,
                conclusion=body.conclusion,
                thanks=body.thanks,
                list_of_sources=body.list_of_sources,
            )
            return ShowArticle(
                article_name=article.article_name,
                engl_article_name=article.engl_article_name,
                authors=article.authors,
                engl_authors=article.engl_authors,
                author_city_first=article.author_city_first,
                author_city_second=article.author_city_second,
                engl_author_city_first=article.engl_author_city_first,
                engl_author_city_second=article.engl_author_city_second,
                annotation=article.annotation,
                keywords=article.keywords,
                engl_annotation=article.engl_annotation,
                engl_keywords=article.engl_keywords,
                introduction=article.introduction,
                theory=article.theory,
                results=article.results,
                conclusion=article.conclusion,
                thanks=article.thanks,
                list_of_sources=article.list_of_sources,
            )


async def _create_new_event(body: EventCreate, db) -> ShowEvent:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            event = await user_dal.create_event(
                name=body.name,
                content=body.content,
                date=body.date
            )
            return ShowEvent(
                event_id=event.event_id,
                name=event.name,
                content=event.content,
                is_active=event.is_active,
                date=event.date
            )


async def _create_new_manager(body: UserCreate, db) -> ShowUser:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            user = await user_dal.create_manager(
                name=body.name,
                surname=body.surname,
                email=body.email,
                hashed_password=Hasher.get_password_hash(body.password),
                roles=PortalRole.ROLE_PORTAL_MANAGER

            )
            return ShowUser(
                user_id=user.user_id,
                name=user.name,
                surname=user.surname,
                email=user.email,
                is_active=user.is_active,
            )


async def _create_new_application(body: ApplicationCreate, db) -> ShowApplication:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            application = await user_dal.create_application(
                event_id=body.event_id,
                user_id=body.user_id,
                event_name=body.event_name,
                content=body.content,
                application_name=body.application_name
            )
            return ShowApplication(
                id=application.id,
                event_id=application.event_id,
                user_id=application.user_id,
                event_name=application.event_name,
                application_name=application.application_name,
                content=application.content,
                status=application.status,
                date=application.date
            )


async def _create_new_comment(body: CommentCreate, db) -> ShowComment:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            comment = await user_dal.create_comment(
                application_id=body.application_id,
                manager_id=body.manager_id,
                manager_name=body.manager_name,
                manager_surname=body.manager_surname,
                content=body.content,
            )
            return ShowComment(
                id=comment.id,
                application_id=comment.application_id,
                manager_id=comment.manager_id,
                manager_name=comment.manager_name,
                manager_surname=comment.manager_surname,
                content=comment.content,
                date=comment.date
            )


async def _create_new_notification(body: NotificationCreate, db) -> ShowNotification:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            notification = await user_dal.create_notification(
                application_id=body.application_id,
                application_name=body.application_name,
                user_id=body.user_id,
            )
            return ShowNotification(
                application_id=notification.application_id,
                application_name=notification.application_name,
                user_id=notification.user_id,
                status=notification.status,
                date=notification.date
            )


async def _delete_user(user_id, db) -> Union[UUID, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            deleted_user_id = await user_dal.delete_user(
                user_id=user_id,
            )
            return deleted_user_id


async def _delete_event(event_id, db) -> Union[UUID, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            deleted_event_id = await user_dal.delete_event(
                event_id=event_id,
            )
            return deleted_event_id


async def _update_user(name: str, user_id: UUID, surname: str, email: EmailStr, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.update_user(user_id=user_id, name=name, surname=surname, email=email)


async def _update_event(name: str, event_id: UUID, content: str, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.update_event(event_id=event_id, name=name, content=content)


async def _update_notifications(user_id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.update_notifications(user_id=user_id)


async def _delete_notifications(user_id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.delete_notifications(user_id=user_id)


async def _update_application(status: str, id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.update_appplication(id=id, status=status)


async def _update_roles(user_id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.grant_admin_roles(user_id=user_id)


async def _update_to_manager(user_id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.grant_manager_roles(user_id=user_id)


async def _revoke_roles(user_id: UUID, session):
    async with session.begin():
        user_dal = UserDAL(session)
        await user_dal.revoke_admin_roles(user_id=user_id)


async def _get_user_by_id(user_id, db) -> Union[User, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            user = await user_dal.get_user_by_id(
                user_id=user_id
            )
            if user is not None:
                return user


async def _get_event_by_id(event_id, db) -> Union[Event, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            event = await user_dal.get_event_by_id(
                event_id=event_id
            )
            if event is not None:
                return event


async def _get_comment_by_application_id(application_id, db) -> Union[Comments, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            comment = await user_dal.get_comment_by_application_id(
                application_id=application_id
            )
            if comment is not None:
                return comment


async def _get_application_by_user_id(user_id, db) -> Union[Application, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            application = await user_dal.get_application_by_user_id(
                user_id=user_id
            )
            if application is not None:
                return application


async def _get_application_by_application_id(application_id, db) -> Union[Application, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            application = await user_dal.get_application_by_application_id(
                application_id=application_id
            )
            if application is not None:
                return application


async def _get_article_by_user_id(user_id, db) -> Union[ShowArticle, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            article = await user_dal.get_article_by_user_id(
                user_id=user_id
            )
            if article is not None:
                return article


async def _get_article_by_article_id(article_id, db) -> Union[ShowArticle, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            article = await user_dal.get_article_by_article_id(
                article_id=article_id
            )
            if article is not None:
                return article


async def _get_new_applications(db) -> Union[Application, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            application = await user_dal.get_new_applications()
            if application is not None:
                return application


async def _get_old_applications(db) -> Union[Application, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            application = await user_dal.get_old_applications()
            if application is not None:
                return application


async def _get_articles(db) -> Union[ShowArticle, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            articles = await user_dal.get_articles()
            if articles is not None:
                return articles


async def _get_doc_articles(db, article_id):
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            bytes1 = await user_dal.get_doc_articles(article_id)
            # bytes2 = '0x255044462D312E350A25D0D4C5D80A332030206F626A0A3C3C0A2F4C656E67746820333333202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAAD93C14EC3300C86EF7B8A1CD74383EDD849BB1B488004D7DE2807D860E202D23609F1F6D84D3B9575D2548943E5D476BEFCF9DD82DB3A70F70BB8106F9AC5D51DA343F68123B9E6DD5155F9AA8E2E91688E5DB3714FCBFD61F7F1B92D9E9B07DD5672F040E1B4A2207088BE16C920CF4CAE0CC903C7739840BEA67A7E25FC0BAC2402CFC9148A6791DCD006803688F44F6C43A48292E659F351DF45634ABE506E1CF308F37D193C0A0F3424DD11748791925294CA9A4BC1D619A215CC5D769E551956564AA7BE8FD0D7AF5A7B591FA6424E1A1FDF7EBEED065FBBCD7E35692E07D93A6DC2A307D4EB30B59C63E70774AAC7D7A5DAD77CC6DCC10DF48071E01215152D7B9E3902839F53265E801E0746D00FC8C4AAC53114C24B33B4400D8973F9CF1CBB09CC3F338E0DEA4668E38D3D983B683F528161659AEC5039F329CC3175F2F3DE368B5F154EF25D0A656E6473747265616D0A656E646F626A0A322030206F626A0A3C3C0A2F54797065202F506167650A2F436F6E74656E74732033203020520A2F5265736F75726365732031203020520A2F4D65646961426F78205B30203020363132203739325D0A2F506172656E742036203020520A3E3E0A656E646F626A0A312030206F626A0A3C3C0A2F466F6E74203C3C202F463431203420302052202F463430203520302052203E3E0A2F50726F63536574205B202F504446202F54657874205D0A3E3E0A656E646F626A0A392030206F626A0A3C3C0A2F4C656E67746820313837202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA8550310EC2300CDCFB0A8F7468706CC76957244062CE46D910150B03F07FE1342930C1609D74E78BEF823001C2BEC18A9BD4AC7782E0BD1B4220481788E87A5588141C8B403AC37135B2C791D5DBD0C8410DA361B0313E50DB31A96DA954C614A9985D99532C4EA18F96F9185DB647B3635EE5220BE7F5967AE3450AA78B4DBFC2607B4A0720EF44083A1ADC50433F9EF7EB6D9AD56E91C57A72584A51BE176B3C5FDEFD9409BF2BCF894BA1FF09DE1FBEE036352FAE755B340A656E6473747265616D0A656E646F626A0A382030206F626A0A3C3C0A2F54797065202F506167650A2F436F6E74656E74732039203020520A2F5265736F75726365732037203020520A2F4D65646961426F78205B30203020363132203739325D0A2F506172656E742036203020520A3E3E0A656E646F626A0A372030206F626A0A3C3C0A2F466F6E74203C3C202F463430203520302052203E3E0A2F50726F63536574205B202F504446202F54657874205D0A3E3E0A656E646F626A0A31302030206F626A0A3C3C0A2F4C656E67746820323537202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75D0B16AC3301006E01382188E80D664F23D412D1370E8144852A887423B752885409B31909606B2398FE647F12364F460EC9E640D951A1D167C2709F39F968B3B7D4F9A16BC96FCE5F499E3171605F7B635071F075C9798BD525160F6C8BB98954FF4F37DDA63B67EDE10F75B7ACB49BF63B925E0AA612CD14421AF51246D14AA8B62DE47A18710C7E132625785682A97BE5E0510F56A4C2F2E690009E9D5410598806A1D920053905D0433107D041A60F07164D8F43B80CA07C71BE719B83C0883C60E01907A90BCEC3C06CAC3C4A075483C4CCDBDEE2666E6EFFD4D689BE92FCE169CA57510F64938B432C79243DBE015CFF11FF850E20BFE02F8E6854C0A656E6473747265616D0A656E646F626A0A31312030206F626A0A3C3C0A2F4C656E67746820323935202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA65D2B14AC4401006E009290EA6F05E40CC3E814944931462E03CC11482561662A5964214C532392CEC7C021FC432BE49C017487945B8717776A630576CF866C3EE9F9D6C7EB45F98C41CDA911F98AC30F7293E6196DB3A71A57B71F7888B0AE36B93E5189FDB598CAB0BF3F2FCFA80F1E2F2D4A4182FCD4D6A925BAC9686883A08EC631B01F500D08C767416A5AD9AD6A1159C80E05851286A452F083A41D80A6620D853148A5AD10B78B503AF76E0D50E3B8A5D45A1A815BDC06F6311EACC6C10CC15D15A508E8237C5EFC663F5431EEF2BC10790FFB04FDF2B68BE14DFDC388B0122CEB0F38216E66B3DCE3845B8D1B3D3143ECCA1E9A628B5E19CF10F1CC69D1FA7E030FE4D34058779748A5E026900BE24018DC0D72622EAB78167155EE11F2AFEB5C40A656E6473747265616D0A656E646F626A0A31322030206F626A0A3C3C0A2F4C656E67746820323239202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75CFB14A03411006E07FB962610AEF0DBC7901DD1CD968BA8518C12B04AD528810504B0B453B310BBED874BEC6BD81B1BBE2709DBD138BA0537CC53F3B3FAC9F1F1ECF78C29E0F6AF673F633BEADE981FC54438D8FC6CDCD3D2D1A722BF65372671A936BCEF9E9F1F98EDCE2E2846B724BBEAA79724DCD92617BE88414D5AE6C81428A2D60613A600FD075297805AA161B758B1077ADE447BD578B98D5F9C732A92665CBAF9C04C9A6E1B6CFDA6E681B9B87CE20D9CD68FC759DF08761C7A8876B7DFFA10ADE5B0962D4AAB56F9F62BBFD2245937A93864FBE804E1BBAA46FC98C6C610A656E6473747265616D0A656E646F626A0A31332030206F626A0A3C3C0A2F4C656E67746820323133202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAC5D1B10AC2301006E03B1C0AB7F808BD17D034582D8250A80A76107472102775145474953C5A1FA5BE41C145305A935654747430C337DC91DCFDA4E9D765C01E37B826B929B9D5E685A40DF9B6E871F0E8CC5714C52426EC072406A64C221EF26EBB5F9288465D96247A3C95ECCD28EE316A3027FFD229AC14E21FB49351577365EC38A9718D67C06B0A07A38210D0F45C8539809BE00DA09ADABB4E69F6B2727E53BFC4D2DBCFEACF97DF273E372937B4268F9D2F00A1C293B2898E0968C034B3199322AF724DBEF207A81FD398EE7A6487DA0A656E6473747265616D0A656E646F626A0A31342030206F626A0A3C3C0A2F4C656E67746820323033202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D8FBD0AC23014854FE910B84BDFC0DE17D0B4A4760DF80376107472104150474145C141308F9647E923383A08F5C61FDC1DF2414EC8B9DF2D4CC718CED8703BE722E3A2CBEB9CF6644A09E55ABE5F565BEA55A4676C4AD223894957633E1E4E1BD2BD499F73D2039EE79C2DA81A30707540DCDC80C45F008B04782076D11D918FEF92AA1BD25AD5B0751290FA2FAC7B23F5D2A15E451FC841F31F5E7F7F55F68BCC7A81CCC54E34B00CA8450D4132F2A21B3B1157618516C4E90CA8B0161A071A5634A52756684C720A656E6473747265616D0A656E646F626A0A31352030206F626A0A3C3C0A2F4C656E67746820323132202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DABDCFB10E82301006E0920E2437C00B98782FA0A511244E2488890C263A3918277574D0E8662C8FC6A3F0088C0C46BC8286C6D5C40EDF70D7F6FE0BFCA10CD1C3110E240612C713DC4B3881AF8B1E86EFCEEE08710A628D7E08624E6510E9022FE7EB0144BC9CA20491E046A2B7853441464769A2FA5BAB91B5AA3FAB3292D725E9E63732620E796736F9A00EE3954E68973AA15D68DD42BFEDE79D51D6A94C9B29F5CFB6FF983F9B13CD246EFE49D864A6E4BCD45B58156D94D1468ECA69C79E7AD2D58AE4754136336096C20A5EB6D16ABB0A656E6473747265616D0A656E646F626A0A31362030206F626A0A3C3C0A2F4C656E67746820323130202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75CF316AC3301805E0673C08FEC53788FF0B34B291E3310627857A28A45387100824190B4D48D75847D3517C848C194ADD575C132854880FF404FA9F0A37754E3375FA906B916931D37D2E477125431ECBE166F7267523F6555D29F689B1D8E659CFA78F83D87AB5D05CEC52D7B9661B69968AE80B80E90390C657E0824F705F10DD50814905D321F50909494012D21F2A8FA42366A025D71623FD1FB87EE12CFC4B7BC78F542319E70EBCB306B62C84CEB07160C928B06EEC59DC00734CF8197F03E2BE1BDE96C7465EE41B83B756320A656E6473747265616D0A656E646F626A0A31372030206F626A0A3C3C0A2F4C656E67746820323735202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D8FBF4EC33010C63F2B43242F7E84DC0B4012704BA7562A452203124C1D101330328060AB1AF7C9C8A344E2053C76B07A9CED4A0C8805C7FAC5BA3FDF7D6767A717136AE89C4ECE5AB233B2137A6AF5ABB656A20D4DA7C7D4E38B5E76BA5E93B5BABE96B8AEBB1B7A7FFB78D6F5F2F6925A5DAFE8BEA5E641772B821CE3A002FA118677DE63517EED3C82E2C2AB3D0ECA171E5B35961E3D508E584887D0C10CA81CAAE13F37F7669DAC99F5E32C40E60661903F8A4FC9A330ECA4467C0AA3E923CD6FBA941D12C744E6A8C3CC992314A750CF1CD2FB10EB0DA75E8E66C4D65C58B94D541C32F749F72F869F4AB74DBD49413E609E9437D18FAC24371AEBE3EEA864B8AC2AA6A0AF3A7DA7BF01240C7F580A656E6473747265616D0A656E646F626A0A31382030206F626A0A3C3C0A2F4C656E67746820313235202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3332D733B05030503006622353053373851443AE422E234320DF00C4054924E772397972E9872B181972E97B0045B9F43D7D154A8A4A53B9F49D029C1580A22E0AD1402DB15C9E2E0A8C0F18D87F8010FF1F04828800A588048C7F18FEC310FB1F06E63F20113A20E67F0CFFFFFF80202E574FAE402E00BB1550090A656E6473747265616D0A656E646F626A0A31392030206F626A0A3C3C0A2F4C656E67746820313539202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503006625343051313851443AE422E13909801880B9248CEE572F2E4D20F573031E7D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA2830FE61FCC7C0F0FF0FFBFF0340528EFD0390B460FCC1C0FEA780F10F03F39F070C7F1818FF1E60F807241B40E4FF06867A20C98020FF61907F062FC90CF26DC3FFFF3FECFFFF4326B95C3DB902B9003F716A530A656E6473747265616D0A656E646F626A0A32302030206F626A0A3C3C0A2F4C656E67746820323039202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D903D0AC2401085475204A6C9113217D04D74FDA914620453085A5988955A5A28DA89C9D172148F903245487C9B282876C2F0EDCC9BDD9DB7AB479D615F3CE949DB173D10DD97BDCF27D65D889E51EACEEEC841C46A2DBACB6A0E9955B490CBF97A60152CA7E2B30A65E38BB7E52814A2382122ABCA40272DC031B9E08D1C3472B2536A65643D4C204109D1018B175D6CBBD3048CDFC4F1095630F9656598FEC7AFDBCCACE4736EE3C485ABF2ED109E0BB2C19CACCC0412942FF3CD4BDDB404ED2A07EBDFE059C42B7E0250FB5A3E0A656E6473747265616D0A656E646F626A0A32312030206F626A0A3C3C0A2F4C656E67746820313434202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3336D7B33452305030066133051313851443AE422E63909801880B9248CEE572F2E4D20F573036E2D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA2830FF60FEF0FF87FC9FFF3F6CECFEFF28A867FFF1E03FF3CF03FF197F36FC67FC0DC20C75406CC3F89F8181F11F1AFE437BCC0CB4F7FFFF7F70CCE5EAC915C80500C8F650EA0A656E6473747265616D0A656E646F626A0A32322030206F626A0A3C3C0A2F4C656E67746820323133202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA4DCDB14EC3401004D0B15C44DAE6DA54647F001CEB12E422225208122E90484581A880920204928B88F8D3FC29F7098768AEB0BC8C2105C56B6667B4BE3A5B9CEB5CBD9E96EA97BA58EA5329AFE24B8673E5EDF7F2F8229B5A8A3BF5A514D78CA5A86FF4FDEDE3598ACDEDA532DDEA3D370F526F15EB30CDACAF2661D638E4E904595A01690F340D25A03A9A8EFAA381AC050E1D31585BC0CC7A38334CCCBADC189845869C8D1C5B79DF211B38197D863F17A3F80FCB2B96F7D4F04F3264F1BBCDC357746D380CE85C845CD5B2931F751859DB0A656E6473747265616D0A656E646F626A0A32332030206F626A0A3C3C0A2F4C656E67746820313630202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3336D7B3345230503052D035543036563033544831E42AE432365000413323884C722E979327977EB882B10197BE0750984BDFD357A1A4A834954BDF29C059C1904BDF4521DA50C12096CBD34581818D810103F3A16139246C07C47550FC8F81811188D98158FEFFFF0FFFA118244E23CC4314AE639061A8679000637B060B06F9060306F903050CEC0F1E3030FE3FC00094E072F5E40AE40200F90E4A6D0A656E6473747265616D0A656E646F626A0A32342030206F626A0A3C3C0A2F4C656E67746820323436202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA65C9B14AC4401485E13B0C247009A44D21E6BE80CE64CD460B31B0AE600A412B0B1116D4D242D176338F368F328FB0658AB8E3EC5D5827087FF171CEB93EAD67A4694627153517549FD16B851FD8CCC3A8A9AEF7CFCB3B2E3A548FD4CC51DD86195577475F9FDF6FA816F7D754A15AD25345FA19BB2579EF42AD37FF917AC8B7908F204303C7100E44041160416CD916600F13C1EF5E19D0835C83841846F69006B42669218951DAA43519232BA7C85D56DA8251E453A49B22779AA1D329E4A0D3CD8AB1925388D1C9C132AC3860DC01BC153F8661E000CFE80380C1C56801D68C2B2EC631C025E388FB03DE74F880BF837D7A3D0A656E6473747265616D0A656E646F626A0A32352030206F626A0A3C3C0A2F4C656E67746820323438202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA65D0BF4AC4401006F06F095C60085E9B42BC7901DDCD5D0C0A0707E709A610B4B210E1402D0515EDC4DB47B2B4CCA3E411525E111277A2F9C3D9FC8A995DBE99398E8EE2840D4FF9706A383EE578C60F11BD5053359CCCFE5AF74FB44C49DF709C90BE7075D2E925BFBDBE3F925E5E9D71447AC5B7119B3B4A575CD785AACBA17E0D6C72AF0226568910F7006700B8EEBE7B00849D1627C0C2C2B44E32AC3B73E4C03847D6EA17CA766E3DA7B7F5D0AACA516FE5625D70D0BB09077E8B8BAF5E17B6E338EBF5EDAE12D83AFA673030EC9C377ECA9EEE18BFAE074A54A5C40FD90DCFBEFC9C1F3473944D5E21D2794AD7F4035BCD58270A656E6473747265616D0A656E646F626A0A32362030206F626A0A3C3C0A2F4C656E67746820323537202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75D0B16AC3301006E01382188E80D664F23D412D1370E8144852A887423B752885409B31909606B2398FE647F12364F460EC9E640D951A1D167C2709F39F968B3B7D4F9A16BC96FCE5F499E3171605F7B635071F075C9798BD525160F6C8BB98954FF4F37DDA63B67EDE10F75B7ACB49BF63B925E0AA612CD14421AF51246D14AA8B62DE47A18710C7E132625785682A97BE5E0510F56A4C2F2E690009E9D5410598806A1D920053905D0433107D041A60F07164D8F43B80CA07C71BE719B83C0883C60E01907A90BCEC3C06CAC3C4A075483C4CCDBDEE2666E6EFFD4D689BE92FCE169CA57510F64938B432C79243DBE015CFF11FF850E20BFE02F8E6854C0A656E6473747265616D0A656E646F626A0A32372030206F626A0A3C3C0A2F4C656E67746820323137202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAA5D1BB0AC2301406E08843E12CAE6E9E273029D8D24E82173083A0938338A9A3A0A273BBF95A7D943E82A3433026CD69C1407130103E7221397F12A74311A1C091E9F108E3040F215C204ACD58D8A15DD89F6022816F304A812FCC2C70B9C4DBF57E043E594D31043EC36D8862077286BA6A05F3ED506759CED8B874F6C82ED9F164BEE716C50F13B2DF22FBC3878D6734315FA4B62A16E8DCEDD354FFF8E91CBC9C81A2FC6FCAAD6B73777E63E1CC3CCD43FE65D672AE777F5D575D6740F6D4779EACACFEB8DBFC3B732AD2BC13CC25ACE1039AD6B3CD0A656E6473747265616D0A656E646F626A0A32382030206F626A0A3C3C0A2F4C656E67746820323330202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAA5D1BD0AC2301000E01407E1161FA1F704A685B6D8A9502BD841D0C9419CD4D141D1B97DB43C4A1FA1A3433126BD1C6271D242F84842EF2797A4D320C60023B3920893191E43B8409C9A7D60B7F6E27086BC04B9C53805B934A720CB15DEAEF713C87C3DC7106481BB10833D94056AFB09217A1B672784A79518D98BAA3687359929D26FC8494B8E1FCE8E1CB14FD263F58F0EE2705CCEC379B90EAE8BEBAC5CDDAE1FFBBB356BADD4776F37E8D757DFFBE4BC5C8FD06C4D56ACFA34639BFF1CC6E57C2EFFF0FDF8BD26AE6EDFF551356ECE8AE6AEDFF3EF35EDC3A2840DBC00FD08BBDD0A656E6473747265616D0A656E646F626A0A32392030206F626A0A3C3C0A2F4C656E67746820323531202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA7DD2B16AC33010066019430247F0EC21C33D412487D6F65648538887403A65080543DBB1D09676B64BA153E99CC7E8D8AD7A143D42DE4071E8FD5A041D24BE93101CBABF3A9FD56CF86C58D59CCB9AEF0A7AA2B21A6A732A4F17B70FB468486FB9AC48AF8653D2CD9A5F9E5FEF492F36975C905EF2AE607343CD92BDF75675DEBB1889774A297F50AAB3EA6FEBFA011711BA085E9004FC0AD2003C1F0119300172A0060CD0020EB082A417A40168750C64C004980239608047A005AC2009E80529BE650C8C800C98023950030668010758C15B2F780FC02C3E802FE013D8033FC03770001C6023C47397488490FC1324BA6AE89A8E3DD7CC190A656E6473747265616D0A656E646F626A0A33302030206F626A0A3C3C0A2F4C656E67746820323935202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA65D2B14AC4401006E009290EA6F05E40CC3E814944931462E03CC11482561662A5964214C532392CEC7C021FC432BE49C017487945B8717776A630576CF866C3EE9F9D6C7EB45F98C41CDA911F98AC30F7293E6196DB3A71A57B71F7888B0AE36B93E5189FDB598CAB0BF3F2FCFA80F1E2F2D4A4182FCD4D6A925BAC9686883A08EC631B01F500D08C767416A5AD9AD6A1159C80E05851286A452F083A41D80A6620D853148A5AD10B78B503AF76E0D50E3B8A5D45A1A815BDC06F6311EACC6C10CC15D15A508E8237C5EFC663F5431EEF2BC10790FFB04FDF2B68BE14DFDC388B0122CEB0F38216E66B3DCE3845B8D1B3D3143ECCA1E9A628B5E19CF10F1CC69D1FA7E030FE4D34058779748A5E026900BE24018DC0D72622EAB78167155EE11F2AFEB5C40A656E6473747265616D0A656E646F626A0A33312030206F626A0A3C3C0A2F4C656E67746820313834202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3333D333365130500061334305330B851443AE422E533320DF00C4054924E772397972E9872B989A71E97B0045B9F43D7D154A8A4A53B9F49D029C150CB9F45D14A20D150C62B93C5D14FE03C11F060610F5FF0084FAC1C00864F20345EB1B804C3005C2204AFE0198E28750EC1F20D40F30C5FC0785FA07A61851A9FFA45228DAA166A25A04B51DEA16A8CBE40F20B91AA81B44817D04F4DF070805910681A14C31FE7F00A2C0B1874E71B97A7205720100A5A692290A656E6473747265616D0A656E646F626A0A33322030206F626A0A3C3C0A2F4C656E67746820323934202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DABD92BF4AC44010C6BF2560600AF302C2CD0B68FE608CD778709E600A41AB2B0EE1402D2D1405BB047CB174BEC676B6292DC2ADB3BBC91657585AFDC264BE6F77E79B2A3B392D38E3928F0B3E2BB9CAF831A7172AE752CCB82AFC9F87675AD694AEB99C537A2D654AEB1B7E7B7D7FA274797BC939A52BDEE49CDD53BD6200C90ED80A8DE9A081C898DE3219D4A0848B0E1796464A9F1AD1202D5F1AF10FA0BE3592DE4A3566D28246DB76D16834AD508A2213A156BB918365ACA391D6460C039D1D54A0B3050217FBEC1CB7CDDF8469FF97D3B97B0CF79AEE3DBE2330BCB7F7F4734037D1CF494D6CFD1CA3564D74738EE1E77E009FC3217C2E47F0399DC3E7F6019723E4DB1AD998AD30B61A11CC5C6603BCB7DD0B8C7B82716F405735DDD12F58B892490A656E6473747265616D0A656E646F626A0A33332030206F626A0A3C3C0A2F4C656E67746820313539202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3337D03331523050300662330B104A31E42AE4323301F2C1222089E45C2E274F2EFD700533132E7D0FA02897BEA7AF424951692A97BE5380B3822197BE8B42B4A182412C97A78B82FD7F30F883417F6090FFC1C0FFC7BE8181FF0303E31F3B0610CD505303A1ED2A20B41C8C2E80D07CE87402846623441F80D0CC84680608CD304A534C03E3170CEAFF81484650B43760D05CAE9E5C815C00A8A681290A656E6473747265616D0A656E646F626A0A33342030206F626A0A3C3C0A2F4C656E67746820323239202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75CFB14A03411006E07FB962610AEF0DBC7901DD1CD968BA8518C12B04AD528810504B0B453B310BBED874BEC6BD81B1BBE2709DBD138BA0537CC53F3B3FAC9F1F1ECF78C29E0F6AF673F633BEADE981FC54438D8FC6CDCD3D2D1A722BF65372671A936BCEF9E9F1F98EDCE2E2846B724BBEAA79724DCD92617BE88414D5AE6C81428A2D60613A600FD075297805AA161B758B1077ADE447BD578B98D5F9C732A92665CBAF9C04C9A6E1B6CFDA6E681B9B87CE20D9CD68FC759DF08761C7A8876B7DFFA10ADE5B0962D4AAB56F9F62BBFD2245937A93864FBE804E1BBAA46FC98C6C610A656E6473747265616D0A656E646F626A0A33352030206F626A0A3C3C0A2F4C656E67746820313933202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA85CFBD0AC2301000E00B1D0AB7F808DE1398B6C69F4DA815CC20E8E4204EEAE8A0E86AF3687D943E42C70EA531B90A761121F9E0EEF273A7E6A3D984221ABBADA6A4C6748EF1862A7171E4435F385D31D528F7A412946B9745A937F4B83F2F28D3ED926294191D628A8EA833B2D6D6004E0B10B6302C216820AC403410D4DE6E41DBD3FE90AB820DF856F7CEA0F4E60684B5EED44797377C92AB82FF82EEAF179BB30BD3B3F86F6EBEF6BBE296C29A67AC78DEC2DB02E04AE30EDF7A896F9C0A656E6473747265616D0A656E646F626A0A33362030206F626A0A3C3C0A2F4C656E67746820313336202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3331D6333656305000611343051363851443AE422E637320DF00C4054924E772397972E9872B189B73E97B0045B9F43D7D154A8A4A53B9F49D029C150CB9F45D14A20D150C62B93C5D14FE03C10730C1FE8F81FF03F31F06C60F8C7F1818C044019C30001116A884042E8281BE04F33F20C1FE1F48FCFFFF0F4A70B97A7205720100C36F4D2A0A656E6473747265616D0A656E646F626A0A33372030206F626A0A3C3C0A2F4C656E67746820323034202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DABDD0BD0AC2400C07F0144121835D1D84E605F47AB4A71584821F6007412707110AEA285451E8E0E0A3F551EE113A3A087A776DC141743381FC2099F2177E97F7C955DDE13D123EF91EED381E5178662B06E5697BC051846C45C24336537B64D19CCEA7CB1ED96831268E6C426B4EEE06A30981FD549555C0109C3B00B4C1CE152DB0E53F717F137F217BC72AB9196A2560A817340BDA0541410AFA77EB013A8950C7F294152A207064A82634E45563E5A9062A124352121BDC8F484390195A1FC169844B7C013AFA66650A656E6473747265616D0A656E646F626A0A33382030206F626A0A3C3C0A2F4C656E67746820323130202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75CF316AC3301805E0673C08FEC53788FF0B34B291E3310627857A28A45387100824190B4D48D75847D3517C848C194ADD575C132854880FF404FA9F0A37754E3375FA906B916931D37D2E477125431ECBE166F7267523F6555D29F689B1D8E659CFA78F83D87AB5D05CEC52D7B9661B69968AE80B80E90390C657E0824F705F10DD50814905D321F50909494012D21F2A8FA42366A025D71623FD1FB87EE12CFC4B7BC78F542319E70EBCB306B62C84CEB07160C928B06EEC59DC00734CF8197F03E2BE1BDE96C7465EE41B83B756320A656E6473747265616D0A656E646F626A0A33392030206F626A0A3C3C0A2F4C656E67746820323230202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA45CFBD6A03310C0060410683967B8180F5028DCFF1B5C956C80FD443219D3284C041DAB19096145228B97BB47B143F82C70E21AE94C3CDE0CF58B265A97223E7A8A431DD59AA4AAAEEE9D5E207BA0907F9F8D06776EF38F368D6E426689E388CC63FD3E1F3EB0DCD6C35278B66411B4BE516FD82EA2201EC9B14E13BAA33342D243801EF3F00BA3B328129C29E8957EA7F201332BA631E5B866B009C79298EEB24B92449250FE02234826EF3B3BE4ACC77D4EF8D4E08429DE93BB836544A9353A93294C60BE01106818781C46381E6CF70E9F105FF001F064D3F0A656E6473747265616D0A656E646F626A0A34302030206F626A0A3C3C0A2F4C656E67746820313837202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA75CFB10AC2301006E08482851B3A3B74B827300D6D6937A156B083A0938338A9A35045E7F6D1FA287D0C076D6CFE2C0E3ADC07F707C2FD6932D319471C8F936A4E623E69BA5262B3C8AEF6E178A1A222B5E32423B51A5352D59AEFB7C79954B159B02655F25E7374A0AA64639E7333387D23A4E9BC4108D3CA97108DF8ADB14AE83991FB3080219CC21CD6B0879D5542AFB5FAF879020318C21C46B086BDF5DDC1D66A9CB86DF87F73235C2FD7F1BB352D2BDAD207C4126E0C0A656E6473747265616D0A656E646F626A0A34312030206F626A0A3C3C0A2F4C656E67746820323137202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA4DCFBD0AC2301007F0840E811BF40584DE1398562B762BF801761074721027757450149C6CC117EBE66B747375EC507BE6CE4187FCC85D2077FF41D40D871860DF9D410FA33EEE42384214BB3AE0921FB60718A5605718C56067AE0B369DE3F974D9831D2DC618829DE03AC46003E904892A4DF557434A51E9354A65B9AE95BA29B6165FAC2E59AF608D625B6247BC8A25AB0BD6CB5923775FFA8998BDD867E57C3F58BABB09BAD18DFC407F66399BC8C444A6FB625BF631D54F4FF6745FF0B6F4AF64C90AC9554AC6CAE535445F619AC2123EE55E73870A656E6473747265616D0A656E646F626A0A34322030206F626A0A3C3C0A2F4C656E67746820313735202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503054D035543035543031564831E42AE432B1040A1A28989840649273B99C3CB9F4C3154C2CB9F43D80C25CFA9EBE0A2545A5A95CFA4E01CE0A865CFA2E0AD1860A06B15C9E2E0A0CF2FF81A0014631FC60B0FFC0C0C060C120FF00481930C81F1800AA004225904A3D80500730291B4630F59FB101996246A51840D43F760606FB070C157C0C0CF51F180A6418F881E162FF034CF18382868181CBD5932B900B00C9F85A760A656E6473747265616D0A656E646F626A0A34332030206F626A0A3C3C0A2F4C656E67746820313332202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503006625343051363851443AE422E13909801880B9248CEE572F2E4D20F573031E7D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA28FCFFFFC3FEFF3F08C9FE9F81F1FF01E67F0C0CFF1B18FF3030D4335099FC0F04309216E6E32521FE82F811D9D75CAE9E5C815C00F79069F90A656E6473747265616D0A656E646F626A0A34342030206F626A0A3C3C0A2F4C656E67746820323039202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D903D0AC2401085475204A6C9113217D04D74FDA914620453085A5988955A5A28DA89C9D172148F903245487C9B282876C2F0EDCC9BDD9DB7AB479D615F3CE949DB173D10DD97BDCF27D65D889E51EACEEEC841C46A2DBACB6A0E9955B490CBF97A60152CA7E2B30A65E38BB7E52814A2382122ABCA40272DC031B9E08D1C3472B2536A65643D4C204109D1018B175D6CBBD3048CDFC4F1095630F9656598FEC7AFDBCCACE4736EE3C485ABF2ED109E0BB2C19CACCC0412942FF3CD4BDDB404ED2A07EBDFE059C42B7E0250FB5A3E0A656E6473747265616D0A656E646F626A0A34352030206F626A0A3C3C0A2F4C656E67746820313330202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503006625343051363851443AE422E13909801880B9248CEE572F2E4D20F573031E7D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA28FC07817F1092FD1F03C3FF03CC7F1818EA1B184124C370229941BE6B60FFCFC0F8FFC0FFFF3FEC41BE06915CAE9E5C815C001B9766010A656E6473747265616D0A656E646F626A0A34362030206F626A0A3C3C0A2F4C656E67746820323138202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAADD0B16EC2301006E03B7988744B1E817B81D6B13020242424A0523320D1A943D509182B950AD69247E351F20819333836679C09C676F986FBE5F36F8FECB39970C1437E32531E19B69677860E64E3B4E0F1B08FB65FB42849BFB39D907E9539E972CDC79FD39EF462B364437AC51F868B4F2A578C4E3980E0F25089B3AC16BFB185ACABC183EA2A38034A36AF30000C2EE8C51AE54C9E6CA259B28DAAA4BB17FD5F7DDC996EEC6DFA3EFED6CDDFDA4AE779B28AAFF805EC2EE0005DA35A7196D7E24092F40F71C37FAB7C3484F64E7A29E98DAE27588A9C0A656E6473747265616D0A656E646F626A0A34372030206F626A0A3C3C0A2F4C656E67746820323033202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D8FBD0AC23014854FE910B84BDFC0DE17D0B4A4760DF80376107472104150474145C141308F9647E923383A08F5C61FDC1DF2414EC8B9DF2D4CC718CED8703BE722E3A2CBEB9CF6644A09E55ABE5F565BEA55A4676C4AD223894957633E1E4E1BD2BD499F73D2039EE79C2DA81A30707540DCDC80C45F008B04782076D11D918FEF92AA1BD25AD5B0751290FA2FAC7B23F5D2A15E451FC841F31F5E7F7F55F68BCC7A81CCC54E34B00CA8450D4132F2A21B3B1157618516C4E90CA8B0161A071A5634A52756684C720A656E6473747265616D0A656E646F626A0A34382030206F626A0A3C3C0A2F4C656E67746820313432202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA33B1D033375530503002621333051363851443AE422E206D001231064B24E772397972E98703F95CFA1E60D2D357A1A4A834954BDF29C059C1904BDF4521DA50C12096CBD345A1FE3F101C80920CF507E40FD430D837B01F2800928C503201483240C90720F201843C002213F0930C2092617090F5078004E3FF0F20E23F9082905CAE9E5C815C004ED154CF0A656E6473747265616D0A656E646F626A0A34392030206F626A0A3C3C0A2F4C656E67746820323531202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA65D0CF4AC3401006F02F041A1882B9E620765E4077D3C6A05028D416CC41D09307110AEA5150D19BD83C92478F79943C428E3D84C4D9ADF943BDFC0EB3B3FBCDEC69741227AC79C2C713CDF139C7537E8CE8956C557332FD3B7A78A6454AEA96E384D4A5D449A557FCFEF6F1446A717DC111A925DF45ACEF295D72D3944E53ED0C1A6053B83530CEAD70C4C07A00883E203D87D206849D19CE807906DD3ACEB1EE2C50C82305F256AF74B2CEAD2BBA5B17AD4E35EAAD255682FDDE4D38F0C738FFEE95B03D83BCD7CBF63581ADA37FFA03C3CE99F5CBEC299FB1733DD044D58EF1D3EC8617CFDC9C1DD9392A9B571A6995D20DFD023EE854950A656E6473747265616D0A656E646F626A0A35302030206F626A0A3C3C0A2F4C656E67746820323632202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DAD592B14A0431108667D962619A3C81645E40B3CBA9B75B05CE13DC42D0CA42ACD4D242D1C26AE39BC537C923ACDD16F1D624B7378287768226907C4C26C9FC3F333FD8ABF7A9A419ED560DCD6774D8D04D85F718F632CCBA9E8EAEEF70D1A2BA0809A84E421C557B4A8F0F4FB7A816674754A15AD26545E515B64B0280CC431AD9F82D40B1817C03D9BF01FDEAA54B6ADE7C1763C235DE690320CDCEBB1516A003319AA207584131423EC4BBF92AAD438418EFD38321D325D0464E60A54D20AD9EC031742681E8B7615C57580CBF073FFCBE5D2AAB605DAC94B5B31BEC0F3BF6E921BB2ADCB3EFA3CFEC3CE8172FDC1FE88DA862DDE1538B7F053C6EF11C3F009B23CF370A656E6473747265616D0A656E646F626A0A35312030206F626A0A3C3C0A2F4C656E67746820313632202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503056D03534533035513031564831E42AE43235500041534BA854722E979327977EB882A90197BE07509C4BDFD357A1A4A834954BDF29C059C1904BDF4521DA50C12096CBD345E1FFFF1FF6FFFF314029F6FF0C8CFF0F3030FF6360F8DFC0C0F88781A19E618451CC20AA81811D14040780E10202300A0CA0943D84E26F0053EC2814330AC5888F3A0031063BC5E5EAC915C80500EC4870760A656E6473747265616D0A656E646F626A0A35322030206F626A0A3C3C0A2F4C656E67746820313535202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3335D133345730503006625343051363851443AE422E13909801880B9248CEE572F2E4D20F573031E7D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA28FCFFFFC3FEFF3F08C9FE9F81F1FF01E67F0C0CFF1B18FF3030D433509764F80723FF8318CC4052BEC11E28C2FFFF0F9004DA0D2419C06A6844FE6F6000DB032481FE85905CAE9E5C815C00271550690A656E6473747265616D0A656E646F626A0A35332030206F626A0A3C3C0A2F4C656E67746820313830202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3337D033315230503006623333051363851443AE422E33909801880B9248CEE572F2E4D20F573033E2D2F7008A72E97BFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA28FCFFFF8381A1FEFF1F18CDFE9F818181F97F03E31F20CDF88F014C33D091063B044CFF878ADB1F80D0FC1F2034FB0F08CDFC0742035D09D1FF1F8DAE6F208F463307663ECC3E98FDFC1F8032ECFF80EE0386D77F907BC1E108743F90E672F5E40AE402001F2390AE0A656E6473747265616D0A656E646F626A0A35342030206F626A0A3C3C0A2F4C656E67746820313638202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA33B1D033375530503006621333051363851443AE422E132320DF00C4054924E772397972E9872B981871E97B0045B9F43D7D154A8A4A53B9F49D029C150CB9F45D14A20D150C62B93C5D14FEFFFFC1C0C00021D9FF030906E67F2092F10F0DC8FFFFFF80C9FF0D2011FB072092FD078864FE032219FF8155FE0793F50D08D21E421EC04B36A0EBFA8F3093198C8076B1FF03D9FB1FEC86FF60F770B97A720572010015585FDD0A656E6473747265616D0A656E646F626A0A35352030206F626A0A3C3C0A2F4C656E67746820323433202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D913D6AC34010859F5021984647D05C205E2D8AD75D0C8E0D561170AA14C19593324542D2054B47D3517204952A8436332B10C8981459F6E7DB370B33F376552C6CC139177C637995F3ED925F2CBD937322CAD58D91D31B6D4A324FEC1C99BDC864CA07FEFCF87A25B339DCB325B3E567CBF991CA2D4347558703B16F01EF3BA44D3FC21D3220F1C037D21AF10074481A443DA216F18F82EEAD82E812154805FA196492E0ACB016A8E62079D70A9542FD37788526F2FE12A6D07FE14A52ADB0BE5AF3D44E260D0EF3968327EA864070236E75AAD8A9A81E86F7EA6AB0577DCE9A61844416A64FA15D498FF40BB14C8EBE0A656E6473747265616D0A656E646F626A0A35362030206F626A0A3C3C0A2F4C656E67746820323032202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA7DCE3B0EC2300C0660571D2A79E911EA13100AADCA16898744072498181013303280606E8FD6A3F4088C0C28C64E046262C827D949FCBB1C0D26390D6924A71C5231A6638E172C2AA97DA91787334E6B345B2A2A344BE9A2A95774BBDE4F68A6EB19E568E6B493317BACE70460991D24AC663D70070D40D38213217AA971F0A9267F8D7F0C7F83611AD8564D1F6A2C890090053BE980F536ADCAFA46BE89915796102546F513D25ECDBCF6B3F657F6E93E37F1A6B209B7D641C41D736FD9057151E306DFBA7C62B30A656E6473747265616D0A656E646F626A0A35372030206F626A0A3C3C0A2F4C656E67746820393520202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3332D733B05030500061434B054303851443AE422E200D82861089E45C2E274F2EFD70209F4BDF034C7AFA2A941495A672E93B05382B1872E9BB28441B2A18C47279BA28C831D437D437FC3F008120B61C0397AB2757201700078D1CCB0A656E6473747265616D0A656E646F626A0A35382030206F626A0A3C3C0A2F4C656E67746820313035202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3332D733B05030500061434B051363851443AE422E4303051004724112C9B95C4E9E5CFAE10A86065CFA1E40512E7D4F5F8592A2D2542E7DA7006705432E7D178568430583582E4F17053986FA86FA86FF072010C49663200D603381CBD5932B900B00F68528110A656E6473747265616D0A656E646F626A0A352030206F626A0A3C3C0A2F54797065202F466F6E740A2F53756274797065202F54797065330A2F4E616D65202F4634300A2F466F6E744D6174726978205B302E30313030342030203020302E3031303034203020305D0A2F466F6E7442426F78205B2030202D3231203733203731205D0A2F5265736F7572636573203C3C202F50726F63536574205B202F504446202F496D61676542205D203E3E0A2F4669727374436861722034360A2F4C61737443686172203235350A2F576964746873203539203020520A2F456E636F64696E67203630203020520A2F4368617250726F6373203631203020520A3E3E0A656E646F626A0A35392030206F626A0A5B32372E3038203020302030203020302030203020302030203020302032372E30382030203020302030203020302037332E30392030203020302030203020302030203020302037352E382030203020302030203020302030203020302030203020302030203020302030203020302030203020302034382E37352035342E31372034332E33332035342E31372034332E333320302034382E373520302032372E303820302030203020302035342E31372034382E3735203020302033372E39322033382E34362033372E3932203020302037302E343220302035312E343620302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302030203020302037332E30392036392E30352036392E3035203020302030203020302037352E3820302037352E38203020302030203020302036362E33342037302E34322037302E343220302030203020302030203020302030203020302030203020302034382E373520302034382E37352034332E33332035342E31372034332E333320302034332E33332035342E313720302035342E31372035342E313720302035342E31372034382E37352035342E31372035342E31372034332E33332034382E37352035312E34362037352E383420302035342E31372035342E31372030203020302037302E34322034382E373520302037332E31332035322E3831205D0A656E646F626A0A36302030206F626A0A3C3C0A2F54797065202F456E636F64696E670A2F446966666572656E636573205B34362F6134362034372F2E6E6F746465662035382F6135382035392F2E6E6F746465662036352F6136352036362F2E6E6F746465662037352F6137352037362F2E6E6F746465662039372F6139372F6139382F6139392F613130302F61313031203130322F2E6E6F74646566203130332F61313033203130342F2E6E6F74646566203130352F61313035203130362F2E6E6F74646566203131302F613131302F61313131203131322F2E6E6F74646566203131342F613131342F613131352F61313136203131372F2E6E6F74646566203131392F61313139203132302F2E6E6F74646566203132312F61313231203132322F2E6E6F74646566203139322F613139322F613139332F61313934203139352F2E6E6F74646566203230302F61323030203230312F2E6E6F74646566203230322F61323032203230332F2E6E6F74646566203230382F613230382F613230392F61323130203231312F2E6E6F74646566203232342F61323234203232352F2E6E6F74646566203232362F613232362F613232372F613232382F61323239203233302F2E6E6F74646566203233312F613233312F61323332203233332F2E6E6F74646566203233342F613233342F61323335203233362F2E6E6F74646566203233372F613233372F613233382F613233392F613234302F613234312F613234322F613234332F61323434203234352F2E6E6F74646566203234362F613234362F61323437203234382F2E6E6F74646566203235312F613235312F61323532203235332F2E6E6F74646566203235342F613235342F613235355D0A3E3E0A656E646F626A0A36312030206F626A0A3C3C0A2F613436203537203020520A2F613538203538203020520A2F613635203130203020520A2F613735203131203020520A2F613937203132203020520A2F613938203133203020520A2F613939203134203020520A2F61313030203135203020520A2F61313031203136203020520A2F61313033203137203020520A2F61313035203138203020520A2F61313130203139203020520A2F61313131203230203020520A2F61313134203231203020520A2F61313135203232203020520A2F61313136203233203020520A2F61313139203234203020520A2F61313231203235203020520A2F61313932203236203020520A2F61313933203237203020520A2F61313934203238203020520A2F61323030203239203020520A2F61323032203330203020520A2F61323038203331203020520A2F61323039203332203020520A2F61323130203333203020520A2F61323234203334203020520A2F61323236203335203020520A2F61323237203336203020520A2F61323238203337203020520A2F61323239203338203020520A2F61323331203339203020520A2F61323332203430203020520A2F61323334203431203020520A2F61323335203432203020520A2F61323337203433203020520A2F61323338203434203020520A2F61323339203435203020520A2F61323430203436203020520A2F61323431203437203020520A2F61323432203438203020520A2F61323433203439203020520A2F61323434203530203020520A2F61323436203531203020520A2F61323437203532203020520A2F61323531203533203020520A2F61323532203534203020520A2F61323534203535203020520A2F61323535203536203020520A3E3E0A656E646F626A0A36322030206F626A0A3C3C0A2F4C656E67746820333134202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA9D913B4EC43014459F95C2920BB2047B03900951F834441A068914484C4581A8809202041D4ABC10166344C136BC049729A2986B3B08A51B11C539B1FD3ED7D7F5D1C169A556AA52FB87B5AAF156EAA114CFA22EB1BA52C727F3D6FD9358B7A2B85175298A4BAC8BA2BD52AF2F6F8FA2585F9F2BAC6ED42D92EE44BB51149E260CC3BC26E607FE6588DB6E8F5B925A7E000DE5436EA923EE301B2973DC3060601884BF5F7060021CD11F72C0FF03CB2A73E965BF2802DA832400022DD0536E00AFA546C8B7ED30619F3E0432DD84AD4CC763EF02B3804D70094304F3DEC77EDE8F09F0917A00D1127069361243423311477436511E3A7892A146AFCFE23DE8A015B6BF07E4664C887DF82E4879737AAA29E3EDE213DC8045D19B311E85B9282998D651DC9736984C59148D245C03898B566CC50F9D76A1010A656E6473747265616D0A656E646F626A0A36332030206F626A0A3C3C0A2F4C656E67746820313330202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3336D4335330503001622373050B03851443AE422E232320DF00C4054924E772397972E9872B181971E97B0045B9F43D7D154A8A4A53B9F49D029C150CB9F45D14A20D150C62B93C5D14183F3030FF6060FFC3C0FF0F05014580E2405972C03F86FF4888F91F03E33F90E08020E6FF0CFFFFFF81232E574FAE402E0036095C1D0A656E6473747265616D0A656E646F626A0A36342030206F626A0A3C3C0A2F4C656E67746820313730202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DADDCFB10AC2301006E00B1D02B7F806F69EC0A4B5293A09B58219049D1CC4491D0515DD7DB43C4A1FA1A343B998E824F40984FBF9EEBFEDCAF1282F49531162A664723A66784513BB8E352E87335616D5964C816A19AEA8EC8AEEB7C70955B59E5386AAA65D467A8FB626C190B6009EE38424CD2C22217581210C1A903C01D982601D01BE40F20A345FDC07EF407481E70FD003FF2949785A7AF09E85F75D2FB8B0B8C1373420928F0A656E6473747265616D0A656E646F626A0A36352030206F626A0A3C3C0A2F4C656E67746820313637202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3331D1333257305030016143055323851443AE422E633320DF00C4054924E772397972E9872B189B71E97B0045B9F43D7D154A8A4A53B9F49D029C150CB9F45D14A20D150C62B93C5D1418FF30D431FCFFC3F8BFE1FF1FF6E603FFFFF0F13FF8FF4746FE03FB1F0BF90F8C7F0AE43F30FC4900110F40C401FE070C7F0FB01F60F8DBC0C0C0F01F4C30E020FE0D2202E420669073FFFF0792680497AB2757201700B1B763840A656E6473747265616D0A656E646F626A0A36362030206F626A0A3C3C0A2F4C656E67746820323432202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA55CEB14AC4401006E0595204A6D93770E7053409D93B100E03E709A610B4BA42ACD4D24251B038C8802FB68F92CE366584E03863F4D0E6637766FEDD89F1E8984A8A745851AC6851D35D858F582FB558D222CE9DDB075CB7586CA95E6271AE652CDA0B7A7E7AB9C7627D794A15161BBAAEA8BCC17643E027C7D0C91BBB317BE73C81B007E8F800A0E11380C02B00CF3BE31520E7F12FD9CCB4E7D310A363D0777AA5990CD16310ED7B9104B9C8004E44E39D15836848EF6CFDA4F3DF34BD850C6FE4C3F043B6C70DE37FA65F7ADB65C6164A623BEB079E3F1204D0F00A869D1BA10FBA5BCA7412CF5ABCC22F8A1A731D0A656E6473747265616D0A656E646F626A0A36372030206F626A0A3C3C0A2F4C656E67746820313638202020202020200A2F46696C746572202F466C6174654465636F64650A3E3E0A73747265616D0A78DA3331D133325730503052D0355430B6503037514831E42AE43236050A1A28989B42649273B99C3CB9F4C3158C4DB9F43D80C25CFA9EBE0A2545A5A95CFA4E01CE0A865CFA2E0AD1860A06B15C9E2E0A0CCC0D0C0CC410ECB8087E54421E4ED8C3897A10F11F48308208E6FFFFFF37C88388FF700249F1C0100F2822E40F301E4022F81F00838C1D4C7C60077AF8073FD0923F72209B7E80C2E9010397AB27572017004210660A0A656E6473747265616D0A656E646F626A0A342030206F626A0A3C3C0A2F54797065202F466F6E740A2F53756274797065202F54797065330A2F4E616D65202F4634310A2F466F6E744D6174726978205B302E30303833362030203020302E3030383336203020305D0A2F466F6E7442426F78205B2032202D3235203539203830205D0A2F5265736F7572636573203C3C202F50726F63536574205B202F504446202F496D61676542205D203E3E0A2F466972737443686172203130330A2F4C61737443686172203131360A2F576964746873203638203020520A2F456E636F64696E67203639203020520A2F4368617250726F6373203730203020520A3E3E0A656E646F626A0A36382030206F626A0A5B35362E393320302033312E3620302030203020302036332E32362030203020302034342E32372034342E392034342E3237205D0A656E646F626A0A36392030206F626A0A3C3C0A2F54797065202F456E636F64696E670A2F446966666572656E636573205B3130332F61313033203130342F2E6E6F74646566203130352F61313035203130362F2E6E6F74646566203131302F61313130203131312F2E6E6F74646566203131342F613131342F613131352F613131365D0A3E3E0A656E646F626A0A37302030206F626A0A3C3C0A2F61313033203632203020520A2F61313035203633203020520A2F61313130203634203020520A2F61313134203635203020520A2F61313135203636203020520A2F61313136203637203020520A3E3E0A656E646F626A0A362030206F626A0A3C3C0A2F54797065202F50616765730A2F436F756E7420320A2F4B696473205B32203020522038203020525D0A3E3E0A656E646F626A0A37312030206F626A0A3C3C0A2F54797065202F436174616C6F670A2F50616765732036203020520A3E3E0A656E646F626A0A37322030206F626A0A3C3C0A2F50726F647563657220284D694B546558207064665465582D312E34302E3235290A2F43726561746F722028546558290A2F4372656174696F6E446174652028443A32303234303531313134313633322B303627303027290A2F4D6F64446174652028443A32303234303531313134313633322B303627303027290A2F54726170706564202F46616C73650A2F505445582E46756C6C62616E6E6572202854686973206973204D694B5465582D70646654655820342E31382E302028312E34302E323529290A3E3E0A656E646F626A0A787265660A302037330A303030303030303030302036353533352066200A30303030303030353331203030303030206E200A30303030303030343237203030303030206E200A30303030303030303135203030303030206E200A30303030303138373139203030303030206E200A30303030303134383831203030303030206E200A30303030303139323639203030303030206E200A30303030303030393830203030303030206E200A30303030303030383736203030303030206E200A30303030303030363130203030303030206E200A30303030303031303438203030303030206E200A30303030303031333835203030303030206E200A30303030303031373630203030303030206E200A30303030303032303639203030303030206E200A30303030303032333632203030303030206E200A30303030303032363435203030303030206E200A30303030303032393337203030303030206E200A30303030303033323237203030303030206E200A30303030303033353832203030303030206E200A30303030303033373837203030303030206E200A30303030303034303236203030303030206E200A30303030303034333135203030303030206E200A30303030303034353339203030303030206E200A30303030303034383332203030303030206E200A30303030303035303732203030303030206E200A30303030303035333938203030303030206E200A30303030303035373236203030303030206E200A30303030303036303633203030303030206E200A30303030303036333630203030303030206E200A30303030303036363730203030303030206E200A30303030303037303031203030303030206E200A30303030303037333736203030303030206E200A30303030303037363430203030303030206E200A30303030303038303134203030303030206E200A30303030303038323533203030303030206E200A30303030303038353632203030303030206E200A30303030303038383335203030303030206E200A30303030303039303531203030303030206E200A30303030303039333335203030303030206E200A30303030303039363235203030303030206E200A30303030303039393235203030303030206E200A30303030303130313932203030303030206E200A30303030303130343839203030303030206E200A30303030303130373434203030303030206E200A30303030303130393536203030303030206E200A30303030303131323435203030303030206E200A30303030303131343535203030303030206E200A30303030303131373533203030303030206E200A30303030303132303336203030303030206E200A30303030303132323538203030303030206E200A30303030303132353839203030303030206E200A30303030303132393331203030303030206E200A30303030303133313733203030303030206E200A30303030303133343038203030303030206E200A30303030303133363638203030303030206E200A30303030303133393136203030303030206E200A30303030303134323339203030303030206E200A30303030303134353231203030303030206E200A30303030303134363936203030303030206E200A30303030303135313236203030303030206E200A30303030303135373538203030303030206E200A30303030303136333936203030303030206E200A30303030303137303438203030303030206E200A30303030303137343432203030303030206E200A30303030303137363532203030303030206E200A30303030303137393032203030303030206E200A30303030303138313439203030303030206E200A30303030303138343731203030303030206E200A30303030303138393635203030303030206E200A30303030303139303334203030303030206E200A30303030303139313639203030303030206E200A30303030303139333332203030303030206E200A30303030303139333832203030303030206E200A747261696C65720A3C3C202F53697A652037330A2F526F6F74203731203020520A2F496E666F203732203020520A2F4944205B3C43443241373742433443333137374533303138444632464345313344463138323E203C43443241373742433443333137374533303138444632464345313344463138323E5D203E3E0A7374617274787265660A31393630320A2525454F460A'
            # image = Image.open(io.BytesIO(bytes2))
            # image.save("download_images_article/image.pdf", "PDF")
            # bytes = base64.b64decode(bytes2, validate=True)
            f = open('download_images_article/image2.pdf', 'wb')
            f.write(bytes1)
            f.close()
            # with open("download_images_article/image.pdf", 'wb') as f:
            #     f.write(base64.b64decode(bytes1))
            #     f.close()
            # a = requests.post(user_dal.get_doc_articles())
            # with open('download_images_article/image', 'wb') as binary_file:
            #     binary_file.write(bytearray(bytes1))
            # multipart_data = decoder.MultipartDecoder.from_response(a)


async def _get_notification_by_user_id(user_id, db) -> Union[Notifications, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            notification = await user_dal.get_notification_by_user_id(
                user_id=user_id
            )
            if notification is not None:
                return notification


async def _get_all_users(db) -> Union[User, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            users = await user_dal.get_all_users()
            return users


async def _get_all_events(db) -> Union[Event, None]:
    async with db as session:
        async with session.begin():
            user_dal = UserDAL(session)
            events = await user_dal.get_all_events()
            return events


def check_user_event_permissions(current_user: User) -> bool:
    if (
            PortalRole.ROLE_PORTAL_ADMIN in current_user.roles
    ):
        return True
